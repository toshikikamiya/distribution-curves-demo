import React, { useState, useEffect } from 'react';
import { ComposedChart, Bar, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';

const generateNormalData = (n, mean, stdDev) => {
  return Array.from({ length: n }, () => {
    let u = 0, v = 0;
    while (u === 0) u = Math.random();
    while (v === 0) v = Math.random();
    const value = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);
    return mean + stdDev * value;
  });
};

const createHistogram = (data, classWidth) => {
  const bins = {};
  data.forEach(value => {
    const bin = Math.floor(value / classWidth) * classWidth;
    bins[bin] = (bins[bin] || 0) + 1;
  });
  return Object.entries(bins)
    .map(([bin, count]) => ({
      bin: parseFloat(bin),
      frequency: count,
      relativeFrequency: count / data.length
    }))
    .sort((a, b) => a.bin - b.bin);
};

const ImprovedRelativeFrequencyHistogramPolygonDemo = () => {
  const [sampleSize, setSampleSize] = useState(1000);
  const [classWidth, setClassWidth] = useState(2);
  const [mean, setMean] = useState(170);
  const [stdDev, setStdDev] = useState(5);
  const [histogramData, setHistogramData] = useState([]);

  useEffect(() => {
    const newData = generateNormalData(sampleSize, mean, stdDev);
    const histogram = createHistogram(newData, classWidth);
    
    const frequencyPolygonData = histogram.map((item) => ({
      ...item,
      polygonX: item.bin + classWidth / 2,
      polygonY: item.relativeFrequency
    }));

    setHistogramData(frequencyPolygonData);
  }, [sampleSize, classWidth, mean, stdDev]);

  return (
    <div className="p-4">
      <h2 className="text-xl font-bold mb-4">相対度数ヒストグラムと度数折れ線のデモ</h2>
      <div className="mb-4 flex flex-wrap">
        <label className="mr-4">
          サンプルサイズ:
          <input
            type="range"
            min="100"
            max="10000"
            step="100"
            value={sampleSize}
            onChange={(e) => setSampleSize(parseInt(e.target.value))}
            className="ml-2"
          />
          {sampleSize}
        </label>
        <label className="mr-4">
          階級の幅:
          <input
            type="range"
            min="0.5"
            max="10"
            step="0.5"
            value={classWidth}
            onChange={(e) => setClassWidth(parseFloat(e.target.value))}
            className="ml-2"
          />
          {classWidth}
        </label>
        <label className="mr-4">
          平均:
          <input
            type="range"
            min="150"
            max="190"
            value={mean}
            onChange={(e) => setMean(parseInt(e.target.value))}
            className="ml-2"
          />
          {mean}
        </label>
        <label className="mr-4">
          標準偏差:
          <input
            type="range"
            min="1"
            max="20"
            value={stdDev}
            onChange={(e) => setStdDev(parseInt(e.target.value))}
            className="ml-2"
          />
          {stdDev}
        </label>
      </div>
      <div className="flex justify-center" style={{ height: '400px' }}>
        <ResponsiveContainer width="100%" height="100%">
          <ComposedChart data={histogramData}>
            <XAxis dataKey="bin" />
            <YAxis label={{ value: '相対度数', angle: -90, position: 'insideLeft' }} />
            <Tooltip />
            <Legend />
            <Bar dataKey="relativeFrequency" fill="#8884d8" name="相対度数ヒストグラム" />
            <Line type="linear" dataKey="polygonY" stroke="#82ca9d" strokeWidth={2} name="度数折れ線" dot={{ stroke: '#82ca9d', strokeWidth: 2 }} />
          </ComposedChart>
        </ResponsiveContainer>
      </div>
      <p className="mt-4">
        このグラフは、相対度数ヒストグラム（紫の棒グラフ）と度数折れ線（緑の線）を表しています。
        ヒストグラムの各棒の高さは、その階級に含まれるデータの相対度数（頻度÷サンプルサイズ）を表しています。
        度数折れ線は、各階級の上辺の中点にポイントを打ち、それらを直線で結んだものです。
      </p>
      <p className="mt-2">
        サンプルサイズ、階級の幅、平均、標準偏差のパラメータを調整することで、ヒストグラムと度数折れ線がどのように変化するかを観察できます。
        サンプルサイズを大きくすると、データの分布がより安定し、真の分布に近づく傾向があります。
        階級の幅を変更すると、データの詳細さと全体的な傾向のバランスがどのように変わるかを見ることができます。
        平均と標準偏差を調整すると、分布の中心位置と広がりがどのように変化するかを観察できます。
      </p>
    </div>
  );
};

export default ImprovedRelativeFrequencyHistogramPolygonDemo;